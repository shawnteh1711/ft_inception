version: '3.0'

services:
  nginx:
    container_name: nginx-container
    image: nginx
    build: 
      context: ./requirements/nginx
      dockerfile: Dockerfile
    ports:
      - 80:80
      - 443:443
    volumes:
      - wordpress_srcs:/var/www/html
    networks:
      - default_network
      # default_network:
      #     ipv4_address: 192.168.0.8
    depends_on:
      - wordpress
    restart: on-failure


  wordpress:
    container_name: wordpress-container
    image: wordpress
    build: 
      context: ./requirements/wordpress
      dockerfile: Dockerfile
    ports:
      - 9000:9000
    volumes:
      - wordpress_srcs:/var/www/html
    networks:
      - default_network
      # default_network:
      #     ipv4_address: 192.168.0.9
    depends_on:
      - mariadb
    restart: on-failure


  mariadb:
    container_name: mariadb-container
    image: mariadb
    build: 
      context: ./requirements/mariadb
      dockerfile: Dockerfile
    ports:
      - 3306:3306
    user: root
    volumes:
      - mariadb_srcs:/var/lib/mysql
      # - /home/shawn/data/mariadb:/var/www/html
    networks:
      - default_network
      # default_network:
      #     ipv4_address: 192.168.0.10
    env_file:
      - .env
    restart: on-failure


networks:
  default_network:
    driver: bridge
    
# networks:
#   default_network:
#     driver: bridge
#     ipam:
#       driver: default
#       config:
#         - subnet: 192.168.0.0/24
#           gateway: 192.168.0.1
#           ip_range: 192.168.0.0/24

volumes:
  wordpress_srcs:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /home/shawn/data/wordpress
  mariadb_srcs:
    driver: local
    driver_opts:
      type: none # create an anonymous volume with no pre-existing data
      o: bind
      device: /home/shawn/data/mariadb
